{% include 'convolution_neural_network' %}

BATCH_SIZE = 100

with tf.Session(config=config) as sess:
    init = tf.initialize_all_variables()
    sess.run(init)
    restore_model(sess, sess_path)

    f = open(output_file_path, 'a')
    p_concat = []
    print('original : predict', file=f)
    for start in range(0, len(y_test), BATCH_SIZE):
        end = min(start + BATCH_SIZE, len(y_test))
        x_batch = x_test[start:end]
        y_batch = y_test[start:end]
        test_data = {X: x_batch, Y: y_batch, p_keep_conv: 1.0, p_keep_hidden: 1.0}
        p = sess.run(predict, feed_dict=test_data)
        y = np.argmax(y_batch, axis=1)
        for i in range(len(y_batch)):
            print('{} : {}'.format(y[i], p[i]), file=f)
        p_concat = np.concatenate((p_concat, p), axis=0)
    print('Accuracy : {}'.format(np.mean(y == p_concat)), file=f)
